{"version":3,"file":"static/js/853.6dc3f9fa.chunk.js","mappings":";sNACA,EAA0H,8BAA1H,EAA0K,8BAA1K,EAA4N,gCAA5N,EAA6Q,sCCQhQA,EAAO,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACvBC,GAAWC,EAAAA,EAAAA,MAgBjB,OACI,gBAAIC,UAAWC,EAAf,WACI,eAAGD,UAAWC,EAAd,UAAoCL,EAApC,KACI,kBAAMI,UAAWC,EAAjB,cACGJ,SAGP,mBACIK,KAAK,SACLF,UAAWC,EACXE,QAtBO,WACf,IAAMC,EAAU,WACVC,EAAY,YAClBC,QAAQC,IAAI,MAAOZ,GACnBW,QAAQC,IAAI,WAAYH,GACxBE,QAAQC,IAAI,aAAcF,GAI1BP,GAASU,EAAAA,EAAAA,IAAY,CAAEb,GAAAA,EAAIS,QAAAA,EAASC,UAAAA,IACvC,EASO,mBAUA,mBACIH,KAAK,SACLF,UAAWC,EACXE,QAlCS,kBAAML,GAASW,EAAAA,EAAAA,IAAWd,GAA1B,EA+Bb,sBAYX,ECtDYe,EAAgB,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,SAAhB,EAIrBC,EAAiB,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,KAAhB,ECJnC,EAA8B,8BCIjBC,EAAW,WACpB,IAAMJ,GAAQK,EAAAA,EAAAA,IAAYH,GAG1B,OAFAR,QAAQC,IAAI,oBAAqBK,IAG7B,eAAIZ,UAAWC,EAAf,SACKW,EAAMM,KAAI,gBAAGvB,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACP,SAACH,EAAD,CAGIC,GAAIA,EAEJC,KAAMA,EACNC,OAAQA,GALHF,EAFF,KAwBtB,EClCD,EAAuB,yBAAvB,EAA4D,8BAA5D,EAAoG,4BAApG,EAA4I,8BCK/HwB,EAAa,WACtB,IAAMrB,GAAWC,EAAAA,EAAAA,MAsBjB,OACI,kBACIC,UAAWC,EACXmB,SAvBa,SAAAC,GACjBA,EAAEC,iBAQF,IAAMC,EAAOF,EAAEG,cACT5B,EAAO2B,EAAKE,SAAS7B,KAAK8B,MAC1B7B,EAAS0B,EAAKE,SAAS5B,OAAO6B,MACpC,GAAa,KAAT9B,GAA0B,KAAXC,EAGf,OAFAC,GAAS6B,EAAAA,EAAAA,IAAQ,CAAE/B,KAAAA,EAAMC,OAAAA,UACzB0B,EAAKK,QAGTC,MAAM,wHACT,EAGG,WAKI,mBACI7B,UAAWC,EADf,kBAKI,mBACA,kBACID,UAAWC,EACXN,GAAG,YACHO,KAAK,OACLN,KAAK,OACLkC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAKhB,mBAEA,mBAAOhC,UAAWC,EAAlB,oBAGI,mBACA,kBACID,UAAWC,EACXC,KAAK,MACLN,KAAK,SACLkC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAKhB,mBAEA,mBACIhC,UAAWC,EACXC,KAAK,SAFT,2BAUX,EC3Ec,SAAS+B,IACpB,IAAMnC,GAAWC,EAAAA,EAAAA,MACXc,GAAYI,EAAAA,EAAAA,IAAYP,GAQ9B,OANAwB,EAAAA,EAAAA,YAAU,WACNpC,GAASqC,EAAAA,EAAAA,MACZ,GAAE,CAACrC,IAEJQ,QAAQC,IAAI,qBAAsBM,IAG9B,iCACI,SAACM,EAAD,KACA,yBAAMN,GAAa,4BACjBA,IAAa,SAACG,EAAD,MAI1B","sources":["webpack://react-homework-template/./src/components/Task/Task.module.css?22e8","components/Task/Task.js","redux/tasks/selectors.js","webpack://react-homework-template/./src/components/TaskList/TaskList.module.css?079b","components/TaskList/TaskList.js","webpack://react-homework-template/./src/components/TaskEditor/TaskEditor.module.css?47aa","components/TaskEditor/TaskEditor.js","pages/Tasks.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Task_wrapper__zvx3s\",\"text\":\"Task_text__IwwM2\",\"button\":\"Task_button__dYLbw\",\"ContactListItem\":\"Task_ContactListItem__WYtbi\",\"ContactListText\":\"Task_ContactListText__s+bVg\",\"ContactListNumber\":\"Task_ContactListNumber__lqI8z\",\"ContactListBtn\":\"Task_ContactListBtn__ydimP\"};","import { useDispatch } from 'react-redux';\nimport { deleteTask, editContact } from 'redux/tasks/operations';\n\n// import { TaskEditor } from 'components/TaskEditor/TaskEditor';\n// import { Spinner } from 'components/Spinner/Spinner';\nimport css from './Task.module.css';\n\n\n\nexport const Task = ({ id, name, number }) => {\n    const dispatch = useDispatch();\n\n    const handleDelete = () => dispatch(deleteTask(id));\n\n    const handleEdit = () => {\n        const newName = \"RoseEDIT\"\n        const newNumber = \"000-00-00\"\n        console.log(\"id:\", id);\n        console.log(\"newName:\", newName);\n        console.log(\"newNumber:\", newNumber);\n\n        // TaskEditor(newName, newNumber)\n\n        dispatch(editContact({ id, newName, newNumber }))\n    };\n\n    return (\n        <li className={css.ContactListItem}>\n            <p className={css.ContactListText}>{name}:\n                <span className={css.ContactListNumber}\n                > {number}\n                </span>\n            </p>\n            <button\n                type=\"button\"\n                className={css.ContactListBtn}\n                onClick={handleEdit}\n            // onClick={() => deleteContact(id)}\n            // disabled={isDeleting}\n            >\n                Edit\n                {/* {isDeleting ? [<Spinner size=\"18\" />, \" Deleting...\"] : \"Delete\"} */}\n            </button>\n            <button\n                type=\"button\"\n                className={css.ContactListBtn}\n                onClick={handleDelete}\n            // onClick={() => deleteContact(id)}\n            // disabled={isDeleting}\n            >\n                Delete\n                {/* {isDeleting ? [<Spinner size=\"18\" />, \" Deleting...\"] : \"Delete\"} */}\n            </button>\n        </li>\n    );\n};\n\n\n\n// export const Task = ({ id, text }) => {\n//     const dispatch = useDispatch();\n//     const handleDelete = () => dispatch(deleteTask(id));\n\n//     return (\n//         <div className={css.wrapper}>\n//             <p className={css.text}>{text}</p>\n//             <button type=\"button\" className={css.button} onClick={handleDelete}>\n//                 Delete\n//             </button>\n//         </div>\n//     );\n// };\n\n\n// ContactListItem.propTypes = {\n//     id: PropTypes.string.isRequired,\n//     // id: PropTypes.number.isRequired,\n//     name: PropTypes.string.isRequired,\n//     number: PropTypes.string.isRequired,\n// };\n","// export const selectLoading = state => state.tasks.loading; //! Ошибка Репеты\nexport const selectLoading = state => state.tasks.isLoading;\n\nexport const selectFilter = state => state.tasks.filter;\n\nexport const selectAllTasks = state => state.tasks.items;\n","// extracted by mini-css-extract-plugin\nexport default {\"ContactList\":\"TaskList_ContactList__ZVQgm\"};","import { useSelector } from 'react-redux';\nimport { Task } from '../Task/Task';\nimport { selectAllTasks } from 'redux/tasks/selectors';\nimport css from './TaskList.module.css';\n\nexport const TaskList = () => {\n    const tasks = useSelector(selectAllTasks);\n    console.log(\"TaskList==>tasks:\", tasks); //!\n\n    return (\n        <ul className={css.ContactList}>\n            {tasks.map(({ id, name, number }) => (\n                <Task\n                    key={id}\n                    // key={Number(id)}\n                    id={id}\n                    // id={Number(id)}\n                    name={name}\n                    number={number}\n                />\n            ))}\n        </ul>\n    );\n\n\n\n    // return (\n    //     <ul className={css.list}>\n    //         {tasks.map(({ id, text }) => (\n    //             <li key={id}>\n    //                 <Task id={id} text={text} />\n    //             </li>\n    //         ))}\n    //     </ul>\n    // );\n};\n\n\n// ContactList.propTypes = {\n//     visibleContacts: PropTypes.array.isRequired,\n// };","// extracted by mini-css-extract-plugin\nexport default {\"Form\":\"TaskEditor_Form__wa-SE\",\"FormLabel\":\"TaskEditor_FormLabel__4glZA\",\"FormBtn\":\"TaskEditor_FormBtn__tHm6t\",\"FormInput\":\"TaskEditor_FormInput__+5PdH\"};","import { useDispatch } from 'react-redux';\nimport { addTask } from 'redux/tasks/operations';\nimport css from './TaskEditor.module.css';\n\n\n// export const TaskEditor = (nameValue = \"rus\", numberValue = \"\") => {\nexport const TaskEditor = () => {\n    const dispatch = useDispatch();\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        // e.currentTarget.elements.name.value = \"Ruslan\";\n        // e.currentTarget.elements.number.value = numberValue;\n\n        // document.querySelector('#inputName').value = \"nameValue\";\n\n\n        const form = e.currentTarget;\n        const name = form.elements.name.value;\n        const number = form.elements.number.value;\n        if (name !== \"\" && number !== \"\") {\n            dispatch(addTask({ name, number }));\n            form.reset();\n            return;\n        }\n        alert('Заполни текст заметки.');\n    };\n\n    return (\n        <form\n            className={css.Form}\n            onSubmit={handleSubmit}\n        >\n\n            <label\n                className={css.FormLabel}\n            >\n                Name\n                {/* {addition ? \"Wait for add...\" : \"Name\"} */}\n                <br />\n                <input\n                    className={css.FormInput}\n                    id=\"inputName\"\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                // value={nameValue}\n                // onChange={handleChange}\n                />\n            </label>\n            <br />\n\n            <label className={css.FormLabel}>\n                Number\n                {/* {addition ? \"...\" : \"Number\"} */}\n                <br />\n                <input\n                    className={css.FormInput}\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                // value={numberValue}\n                // onChange={handleChange}\n                />\n            </label>\n            <br />\n\n            <button\n                className={css.FormBtn}\n                type=\"submit\"\n            // disabled={addition}\n            >\n                Add contact\n                {/* {addition ? <Spinner size= \"32\">Add contact</Spinner>  : \"Add contact\"} */}\n            </button>\n        </form>\n    );\n}\n\n// ContactForm.propTypes = {\n//     onSubmit: PropTypes.func.isRequired,\n// };\n\n\n\n\n\n\n\n    // const dispatch = useDispatch();\n\n    // const handleSubmit = e => {\n    //     e.preventDefault();\n    //     const form = e.currentTarget;\n    //     const text = form.elements.text.value;\n    //     if (text !== '') {\n    //         dispatch(addTask(text));\n    //         form.reset();\n    //         return;\n    //     }\n    //     alert('Заполни текст заметки.');\n    // };\n\n    // return (\n    //     <form className={css.form} onSubmit={handleSubmit}>\n    //         <input name=\"text\" className={css.input} />\n    //         <button type=\"submit\" className={css.button}>\n    //             Add todo\n    //         </button>\n    //     </form>\n    // );\n\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TaskList } from 'components/TaskList/TaskList';\nimport { TaskEditor } from 'components/TaskEditor/TaskEditor';\nimport { fetchTasks } from 'redux/tasks/operations';\nimport { selectLoading } from 'redux/tasks/selectors';\n\nexport default function Tasks() {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectLoading);\n\n    useEffect(() => {\n        dispatch(fetchTasks());\n    }, [dispatch]);\n\n    console.log(\"Tasks==>isLoading:\", isLoading); //!\n\n    return (\n        <>\n            <TaskEditor />\n            <div>{isLoading && 'Request in progress...'}</div>\n            {!isLoading && <TaskList />}\n            {/* <TaskList /> */}\n        </>\n    );\n}\n"],"names":["Task","id","name","number","dispatch","useDispatch","className","css","type","onClick","newName","newNumber","console","log","editContact","deleteTask","selectLoading","state","tasks","isLoading","selectAllTasks","items","TaskList","useSelector","map","TaskEditor","onSubmit","e","preventDefault","form","currentTarget","elements","value","addTask","reset","alert","pattern","title","required","Tasks","useEffect","fetchTasks"],"sourceRoot":""}